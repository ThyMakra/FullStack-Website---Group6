generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Recipe model
model Recipe {
  id Int @id @default(autoincrement())
  name String
  description String?
  calories Int @default(0)
  duration_second Int @default(0)
  instruction String?
  imageLink String?
  videoLink String?
  createdAt DateTime @default(now())
  updatedAt DateTime?
  categories PivotRecipesCategories[]
  ingredients PivotRecipesIngredients[]
  types RecipeType[] // Implicit
  keywords RecipeKeyword[] // Implicit
}

// Recipe Category model
model RecipeCategory {
  id Int @id @default(autoincrement())
  name String
  description String?
  recipes PivotRecipesCategories[]
  createdAt DateTime @default(now())
  updatedAt DateTime?
}

// Recipe and Recipe Category M2M join table
model PivotRecipesCategories {
  recipe Recipe  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId Int
  recipeCategory RecipeCategory  @relation(fields: [recipeCategoryId], references: [id], onDelete: Cascade)
  recipeCategoryId Int
  assignedAt DateTime @default(now())
  assignedBy String?

  @@id([recipeId, recipeCategoryId])
}

// Recipe Types model
model RecipeType {
  id Int @id @default(autoincrement())
  name String
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime?
  recipes Recipe[]
}

// Recipe Keywords model
model RecipeKeyword {
  id Int @id @default(autoincrement())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime?
  recipes Recipe[]
}

// Ingredient model
model Ingredient {
  id Int @id @default(autoincrement())
  name String
  description String?
  icon String?
  createdAt DateTime @default(now())
  updatedAt DateTime?
  recipes PivotRecipesIngredients[]
  categories IngredientCategory[] // implicit
}

// Recipe and Ingredient M2M join table
model PivotRecipesIngredients {
  recipe Recipe  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId Int
  ingredient Ingredient  @relation(fields: [ingredientId], references: [id], onDelete: Cascade)
  ingredientId Int
  assignedAt DateTime @default(now())

  @@id([recipeId, ingredientId])
}

// Ingredient Category model
model IngredientCategory {
  id Int @id @default(autoincrement())
  name String
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime?
  ingredients Ingredient[]
}
